# The runconfig section is intended to be used for dynamically generating the runconfig file used
# when running the PGEs. Any values set with a "__CHIMERA_VAL__" should be filled in by the input
# preprocessor. Otherwise, a precondition evaluation error will be thrown.
runconfig:
  name: NISAR_L1-L-RSLC_RUNCONFIG
  PGENameGroup:
    PGEName: RSLC_L_PGE
  InputFilePath:
      L0B_L_RRSD: "__CHIMERA_VAL__"
  DynamicAncillaryFileGroup:
    # Digital elevation model, optional.
    DEMFile: "__CHIMERA_VAL__"
    # Refined orbit, optional.
    # Defaults to orbit within L0B product.
    Orbit: "__CHIMERA_VAL__"
    # Refined pointing, optional.
    # Defaults to attitude within L0B product.
    Pointing: "__CHIMERA_VAL__"
    # External calibration data, optional.
    # Defaults to no extra calibration gain, phase, delay, etc.
    ExternalCalibration: "__CHIMERA_VAL__"
    # Internal calibration tables, optional.
    # If not provided, no secondary elevation antenna pattern correction.
    InternalCalibration: "__CHIMERA_VAL__"
    # Polarimetric calibration data, optional.  Crosstalk, relative phases, etc.
    # If not provided, no polarimetric calibration performed.
    PolarimetricCalibration: "__CHIMERA_VAL__"
    # Pre- and post-data take calibration data products, optional.
    BookendCalibration: "__CHIMERA_VAL__"
    # Antenna pattern data, optional.
    # Defaults to sinc^4 pattern using nominal antenna dimensions.
    AntennaPattern: "__CHIMERA_VAL__"
    # Chirp replica file, optional.
    # If absent will generate LFM chirp using parameters in L0B product.
    Waveform: "__CHIMERA_VAL__"
  ProductPathGroup:
    # Directory where PGE will place results. Irrelevant to SAS.
    ProductPath: "output"
    # Directory where SAS can write temporary data
    ScratchPath: "scratch"
    # SAS writes output_rslc product to the following file. PGE may rename.
    # NOTE: R2 needs to handle mixed-mode case with multiple outputs.
    SASOutputFile: "output/rslc.h5"
    SASConfigFile: "output/rslc_config.yaml"
    ProductCounter: "__CHIMERA_VAL__"
  PrimaryExecutable:
    # Handy to set to "SLC" until other ISCE tools updated.
    ProductType: RSLC
    CompositeReleaseID: "__CHIMERA_VAL__"
    ProcessingType: "__CHIMERA_VAL__"
    MissionId: NISAR
    ProductAccuracy: "__CHIMERA_VAL__"
  Geometry:
    RelativeOrbitNumber: "__CHIMERA_VAL__"
    FrameNumber: "__CHIMERA_VAL__"
    CycleNumber: "__CHIMERA_VAL__"
    OrbitDirection: "__CHIMERA_VAL__"
    TrackFramePolygon: "__CHIMERA_VAL__"
    FullCoverageThresholdPercent: 75.0
  DebugLevelGroup:
    DebugSwitch: Off
  # Whether or not to use GPU, optional. Defaults to True if available.
  worker:
    gpu_enabled: "__CHIMERA_VAL__"
  # FOR R1:
  processing:
    output_grid:
      # Azimuth bounds of output SLC, optional.
      # Defaults to extent of raw data minus sythetic aperture and
      # shifted by squint.
      # 128
      # start_time: 2006-10-07T06:10:05.473295634
      # end_time: 2006-10-07T06:10:05.542038921
      # # Range bounds of output SLC in meters, optional.
      # # Defaults to entire fully focused swath.
      # start_range: 751863.3552474803
      # end_range: 752462.3952474804
      # 256
      # start_time: 2006-10-07T06:10:05.442352522
      # end_time: 2006-10-07T06:10:05.579839095
      # start_range: 751563.8348427379
      # end_range: 752761.914842738
      # 512
      start_time: "__CHIMERA_VAL__"
      end_time: "__CHIMERA_VAL__"
      # Commented out per Heresh's feedback
      start_range:
      end_range:
      # 2048
      # start_time: 2006-10-07T06:10:04.961207692
      # end_time: 2006-10-07T06:10:06.060983925
      # start_range: 747366.1955147379
      # end_range: 756959.554170738
      # Output grid azimuth sample rate in Hz, optional.
      # Defaults to input PRF.
      output_prf:
      # Interval for azimuth grid alignment in seconds. See docs.
      # Typically want 1 second and integer PRF (in Hz). Will not
      # override user-provided start_time.
      time_snap_interval: 1.0
    # Range spectral window, optional.  Defaults to no weighting.
    range_window:
      # Kaiser or Cosine
      kind: Kaiser
      # Shape parameter. For Kaiser, 0 <= shape < Inf.
      # For Cosine, 0 <= shape <= 1
      shape: 3.0
    # Azimuth spectral window, optional.  Defaults to no weighting.
    azimuth_window:
      kind: Kaiser
      shape: 0.0
    # Range filter parameters for mixed-mode cases.
    range_common_band_filter:
      # Stop-band attenuation in dB
      attenuation: 40.0
      # Transition width as a fraction of output bandwidth.
      width: 0.15
    doppler:
      # Offset between quaternion frame and antenna boresight in degrees.
      # TBD This will likely be parameter in a separate cal file.
      azimuth_boresight_deg: 0.0
      # How to interpolate between samples in the LUT.
      interp_method: bilinear
      # Postings for generated Doppler lookup table.
      spacing:
        # Lookup table range spacing in m
        range: 2000.0
        # Lookup table Azimuth spacing in s
        azimuth: 1.0
      rdr2geo:
        # Slant range convergence threshold (m): float (default: 1e-8)
        threshold: "1.0e-8"
        # Max number of primary iterations: int (default: 25)
        maxiter: 25
        # Max number of secondary iterations: int (default: 15)
        extraiter: 15
    # Settings for range compression algorithm.
    rangecomp:
      # Convolution output mode: {"valid", "full", "same"} (default: "full")
      mode: full
      # Range compression will always process the full pulse, so the
      # range dimension will be ignored.
      block_size:
        range: 0
        azimuth: 1024
    # Settings for azimuth compression algorithm.
    azcomp:
      # Azimuth compression can be tiled arbitrarily, though
      # dimensions will affect runtime.
      block_size:
        range: 128
        azimuth: 128
      # Desired azimuth resolution in meters.
      azimuth_resolution: 6.0
      kernel:
        # Knab or NFFT
        type: Knab
        # Length = 1+2*halfWidth
        halfwidth: 4
        # Transform padding ratio for NFFT method.
        approx_oversample: 1.7
        fit: Table # null or Cheby or Table
        fit_order: 2048
      rdr2geo:
        # Slant range convergence threshold (m): float (default: 1e-8)
        threshold: "1.0e-8"
        # Max number of primary iterations: int (default: 25)
        maxiter: 25
        # Max number of secondary iterations: int (default: 15)
        extraiter: 15
      geo2rdr:
        # Slant range convergence threshold (m): float (default: 1e-8)
        threshold: "0.00000001"
        # Max number of iterations: int (default: 50)
        maxiter: 50
        # Step size for computing numerical gradient of Doppler (m): float
        # (default: 10.)
        delta_range: 10.
    dry_troposphere_model: nodelay
    dem:
      # Height (in meters) to use if DEM unavailable.
      reference_height: 661.0
      # How to interpolate the digital elevation model.  One of
      # nearest, bilinear, bicubic, biquintic, or sinc
      interp_method: biquintic
    # Nominal antenna dimensions to use for BLU, EAP, etc. when no
    # antenna pattern input file is provided or its contents are
    # unsuitable. Each dimension has units of meters and is assumed
    # 12.0 m if unspecified.
    nominal_antenna_size:
      range: 12.0
      azimuth: 12.0
    # Scale factor to apply to data before float16 encoding, optional.
    # Default is 1.0.
    # The largest representable float16 value is 65504.
    # NOTE This is ad-hoc until the processor is radiometrically calibrated.
    encoding_scale_factor: 0.01
    # Processing stage switches, mostly for debug.
    # Any missing stages assumed True
    is_enabled:
      # radio frequency interference mitigation
      rfi_removal: True
      # azimuth resampling and gap-filling
      presum_blu: True
      # range compression
      rangecomp: True
      # elevation antenna pattern correction
      eap: True
      # R^4 spreading loss correction
      range_cor: True
      # azimuth compression
      azcomp: True
  QA:
    validate: True
    quality: True
  pge_job_name: "__CHIMERA_VAL__"
  mock_metadata: "__CHIMERA_VAL__"
  base_name: "__CHIMERA_VAL__"
  extra_pge_output_metadata: "__CHIMERA_VAL__"


# This lists all the precondition evaluation steps that this PGE needs to run prior to running the PGE.
# These functions should be defined in the precondition_definition.yaml
preconditions:
  - get_gpu_enabled
  - get_products
  - get_metadata
  - get_product_metadata
  - get_track_frame_polygon
  - get_crid
  - get_dems
  - get_dyn_anc_l1_l2
  - get_hardcoded_metadata
  - set_pcm_retrieval_id
  - get_product_counter
  - set_product_time
  - set_pge_job_name
  - set_mock_metadata
  - set_base_name
  - set_extra_pge_output_metadata

# For any of the precondition evaluation steps listed in the preconditions area,
# specify function arguments here

postprocess:
  - update_track_frame_product_accountability

# Processes the product that triggered the job
get_products:
  is_state_config_trigger: true
  file_names_key: "found_l0b_rrsds"

# Looks at the context to get metadata
get_metadata:
  keys:
    - input_dataset_id

# Looks at the metadata area under the product_metadata area in the context
get_product_metadata:
  keys:
    - track_frame_begin_time
    - track_frame_end_time
    - CycleNumber
    - RelativeOrbitNumber
    - TrackFrame
    - TrackFramePolygon
    - processing_start_time
    - processing_end_time
    - BeamName
    - FrameCoverage
    - DataSource
  attribute_names:
    TrackFrame: FrameNumber
    processing_start_time: processing.output_grid.start_time
    processing_end_time: processing.output_grid.end_time

get_hardcoded_metadata:
  ProcessingType: PR
  ProductAccuracy: P
  OrbitDirection: Descending
  OrbitDirectionLetter: D

get_product_counter:
  metadata.PCMRetrievalID.keyword: "PCMRetrievalID"
  metadata.CompositeReleaseID.keyword: "CompositeReleaseID"


# This value will get used as part of the job id during the job submission step.
set_pge_job_name:
  template: "{input_dataset_id}"

get_dems:
  #bbox: "-123.724407219755 38.1368492675898 -121.42779037568 39.6108373735625"
  polygon_key: TRACK_FRAME_POLYGON

# When doing simulated PGE runs, this will mock together a set of metadata for the met.json output
set_mock_metadata:
  # Hard-coded values in the structure you want
  L1_L_RSLC:
    static:
      PGE_Name: "RSLC_L_PGE"
      PGE_Version: "R1.1.0"
      SAS_Version: "ISCE3 v0.2.0-dev"
    dynamic:
      Input_Files: L0B_L_RRSD
      Production_DateTime: ProductionDateTime
      RadarStartDateTime: processing.output_grid.start_time
      RadarStopDateTime: processing.output_grid.end_time
      CompositeReleaseID: CompositeReleaseID
      Bounding_Polygon: TrackFramePolygon
      ProcessingType: ProcessingType
      CycleNumber: CycleNumber
      RelativeOrbitNumber: RelativeOrbitNumber
      OrbitDirection: OrbitDirection
      OrbitDirectionLetter: OrbitDirectionLetter
      FrameNumber: FrameNumber
      ProductAccuracy: ProductAccuracy
      ProductCounter: ProductCounter
      BeamName: BeamName
      FrameCoverage: FrameCoverage
      DataSource: DataSource


# When performing simulated PGE runs, this sets the base name to be used when generating the output
# products.
set_base_name:
  L1_L_RSLC:
    template: NISAR_L1_{ProcessingType}_RSLC_{CycleNumber:03d}_{RelativeOrbitNumber:03d}_{OrbitDirectionLetter}_{FrameNumber:03d}_4020_VV_{RadarStartDateTime}_{RadarStopDateTime}_{CompositeReleaseID}_{ProductAccuracy}_F_{ProductCounter:03d}
    # This tells the function how to format the date time string in the file name (if applicable) e.g.:
    date_time_formats:
      RadarStartDateTime: "%Y%m%dT%H%M%S"
      RadarStopDateTime: "%Y%m%dT%H%M%S"

# Creates the PCMRetrievalID value to determine product counter
set_pcm_retrieval_id:
  template: NISAR_L1_{ProcessingType}_RSLC_{CycleNumber:03d}_{RelativeOrbitNumber:03d}_{OrbitDirectionLetter}_{FrameNumber:03d}_{ProductAccuracy}_{FrameCoverage}_{DataSource}_{BeamName}

# This function will add to the PGE output metadata when product to dataset conversion is performed
set_extra_pge_output_metadata:
  BeamName: BeamName
  FrameCoverage: FrameCoverage
  DataSource: DataSource

# This is intended to convert metadata string values to integers
# This would be used in cases where the RunConfig expects an integer when we
# have it as a string
cast_string_to_int:
  keys:
    - CycleNumber
    - RelativeOrbitNumber
    - FrameNumber

# The PGE name
pge_name: RSLC

# Set the primary input/output types here
primary_input: "L0B_L_RRSD"
primary_output: "L1_L_RSLC"

# List the extensions that the PGE generates
output_types:
  L1_L_RSLC:
    - h5
    - h5.log
    - h5.met

# List the groups from the runconfig that Chimera will need to localize (download)
localize_groups:
  - InputFilePath
