VENUE: '{{VENUE}}'
PGE_SIMULATION_MODE: !!bool true
CRID: '{{ CRID }}'
DSWX_COLLECTION_NAME: "OPERA_L3_DSWX_HLS_0.0"

# Shortname filtering on input product types. RegEx strings ('.' == any single character)
SHORTNAME_FILTERS:
  L30:
#   - L.07 # Landsat-7
    - L.08 # Landsat-8
    - L.09 # Landsat-9
  S30:
    - S1 # Sentinel-1
#   - S2 # Sentinel-2

# Base API urls and login endpoints for the different DAAC environments.
DAAC_ENVIRONMENTS:
  OPS:
    BASE_URL: cmr.earthdata.nasa.gov
    EARTHDATA_LOGIN: urs.earthdata.nasa.gov

  UAT:
    BASE_URL: cmr.uat.earthdata.nasa.gov
    EARTHDATA_LOGIN: uat.urs.earthdata.nasa.gov

# Settings to set the latency period for various jobs
NOMINAL_LATENCY:
    # Latency period in minutes. Expiration time is calculated from when the LDF is being processed.
#   RRST_EVALUATOR: 60

URGENT_RESPONSE_LATENCY:
    # Latency period in minutes. Expiration time is calculated from when the LDF is being processed.
#    RRST_EVALUATOR: 60

# This area is intended to be used to set any PGE configurable settings that an operator can change
# during production.

PRODUCT_TYPES:
    Observation_Accountability_Report:
        Pattern: !!python/regexp '(?P<id>oad_(?P<ContentType>\w+)_(?P<ValidityStartDateTime>\d{4}-\d{3}T\d{2}:\d{2}:\d{2})_(?P<ValidityEndDateTime>\d{4}-\d{3}T\d{2}:\d{2}:\d{2})\.(xml|json))$'
        Extractor: extractor.FilenameRegexMetExtractor
        Configuration:
            Date_Time_Patterns: ['%Y-%jT%H:%M:%S']
        Strip_File_Extension: !!bool true
        Dataset_Keys:
            starttime: ValidityStartDateTime
            endtime: ValidityEndDateTime

    L2_HLS_L30:
        # Pattern for parsing filenames such as "HLS.L30.T22VEQ.2021248T143156.v2.0.Fmask.tif".
        # This pattern groups the metadata information in the filename using named groups.
        #
        # See naming convention documentation (https://lpdaac.usgs.gov/data/get-started-data/collection-overview/missions/harmonized-landsat-sentinel-2-hls-overview/#hls-naming-conventions)
        #
        # Note: POSIX character class "[[:alnum:]]" is not supported in python's re, and so has been replaced with "[^\W_]" here.
        Pattern: !!python/regexp '(?P<product_shortname>HLS[.]L30)[.](?P<tile_id>T[^\W_]{5})[.](?P<acquisition_ts>(?P<year>\d{4})(?P<day_of_year>\d{3})T(?P<hour>\d{2})(?P<minute>\d{2})(?P<second>\d{2}))[.](?P<collection_version>v\d+[.]\d+)[.](?P<band_or_qa>[^\W_]+)[.](?P<format>tif)$'
        Strip_File_Extension: !!bool true
        Extractor: extractor.FilenameRegexMetExtractor
        Configuration:
            # Custom Pattern for dates like "<year><day number of year>T<hour><minute><second>"
            # For example, "2021248T143156":
            #   year: 2021
            #   day number of year: 248
            #   hour (24hr): 14
            #   minute: 31
            #   second: 56
            Date_Time_Patterns: ['%Y%jT%H%M%S']

            # Specify the metadata key to convert to a start and end time for the dataset times
            Date_Time_Keys: ['acquisition_ts']
            # Specify the metadata key to use as the dataset version.
            #  Note: this affects the data product index name
            Dataset_Version_Key: 'collection_version'
        Dataset_Keys: {}

    L2_HLS_S30:
        # Pattern for parsing filenames such as "HLS.S30.T15SXR.2021250T163901.v2.0.Fmask.tif".
        # This pattern groups the metadata information in the filename using named groups.
        #
        # See naming convention documentation (https://lpdaac.usgs.gov/data/get-started-data/collection-overview/missions/harmonized-landsat-sentinel-2-hls-overview/#hls-naming-conventions)
        #
        # Note: POSIX character class "[[:alnum:]]" is not supported in python's re, and so has been replaced with "[^\W_]" here.
        Pattern: !!python/regexp '(?P<product_shortname>HLS[.]S30)[.](?P<tile_id>T[^\W_]{5})[.](?P<acquisition_ts>(?P<year>\d{4})(?P<day_of_year>\d{3})T(?P<hour>\d{2})(?P<minute>\d{2})(?P<second>\d{2}))[.](?P<collection_version>v\d+[.]\d+)[.](?P<band_or_qa>[^\W_]+)[.](?P<format>tif)$'
        Strip_File_Extension: !!bool true
        Extractor: extractor.FilenameRegexMetExtractor
        Configuration:
            # Custom Pattern for dates like "<year><day number of year>T<hour><minute><second>"
            # For example, "2021248T143156":
            #   year: 2021
            #   day number of year: 248
            #   hour (24hr): 14
            #   minute: 31
            #   second: 56
            Date_Time_Patterns: ['%Y%jT%H%M%S']

            # Specify the metadata key to convert to a start and end time for the dataset times
            Date_Time_Keys: ['acquisition_ts']
            # Specify the metadata key to use as the dataset version.
            #  Note: this affects the data product index name
            Dataset_Version_Key: 'collection_version'
        Dataset_Keys: {}

    L3_DSWx_HLS:
        # Pattern for parsing filenames such as:
        # * "OPERA_L3_DSWx_HLS_T22VEQ_20210905T143156Z_20220105T143156Z_L8_30_v0.1_B01_WTF.tiff"
        # * "OPERA_L3_DSWx_HLS_T15SXR_20210907T163901Z_20220207T163901Z_S2A_30_v0.1_B09_CLOUD.tiff"
        # This pattern groups the metadata information in the filename using named groups.
        #
        # Note: POSIX character class "[[:alnum:]]" is not supported in python's re, and so has been replaced with "[^\W_]" here.
        Pattern: !!python/regexp '(?P<id>(?P<project>OPERA)_(?P<level>L3)_(?P<product_type>DSWx_(?P<source>HLS))_(?P<tile_id>T[^\W_]{5})_(?P<acquisition_ts>(?P<acq_year>\d{4})(?P<acq_month>\d{2})(?P<acq_day>\d{2})T(?P<acq_hour>\d{2})(?P<acq_minute>\d{2})(?P<acq_second>\d{2})Z)_(?P<creation_ts>(?P<cre_year>\d{4})(?P<cre_month>\d{2})(?P<cre_day>\d{2})T(?P<cre_hour>\d{2})(?P<cre_minute>\d{2})(?P<cre_second>\d{2})Z)_(?P<sensor>S2A|S2B|L8)_(?P<spacing>30)_(?P<collection_version>v\d+[.]\d+))_(?P<band_index>B\d{2})_(?P<band_name>WTR|BWTR|CONF|DIAG|WTR-1|WTR-2|LAND|SHAD|CLOUD|DEM)[.](?P<ext>tiff)$'
        Strip_File_Extension: !!bool true
        Extractor: extractor.FilenameRegexMetExtractor
        Configuration:
            # Custom Pattern for dates like "<year><month><day>T<hour><minute><second>"
            # For example, "20210211T163901":
            #   year: 2021
            #   month: 02 (February)
            #   day of month: 11 (the 11th)
            #   hour (24hr): 16
            #   minute: 39
            #   second: 01
            Date_Time_Patterns: ['%Y%m%dT%H%M%SZ']

            # Specify the metadata key to convert to a start and end time for the dataset times
            Date_Time_Keys: ['acquisition_ts', 'creation_ts']
            # Specify the metadata key to use as the dataset version.
            #  Note: this affects the data product index name
            Dataset_Version_Key: 'collection_version'
        Dataset_Keys: {}


# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# WARNING: ONLY MODIFY THE SETTINGS BELOW IF YOU KNOW WHAT YOU'RE DOING !!!!!!!!!!!!!!
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

# Settings to enable forceful ingest of PGE outputs (a.k.a disable no-clobber errors)
# These settings only take effect on those PGE jobs that produce datasets that get
# pushed to object storage.
FORCE_INGEST:
    INGEST_STAGED: !!bool false
